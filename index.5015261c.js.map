{"mappings":"AAAA","sources":["src/js/learn-javascript.js"],"sourcesContent":["\"use strict\";\n\n\n// // 2.1 Основы\n\n// alert ('Я JavaScript!');\n\n// alert (3 +\n// 1\n// + 2);                               //6\n\n\n// // Ключевые слова\n\n// // Зарезервированные ключевые слова в ECMAScript 2015\n// break\n// case\n// class\n// catch\n// const\n// continue\n// debugger\n// default\n// delete\n// do\n// else\n// export\n// extends\n// finally\n// for\n// function\n// if\n// import\n// in\n// instanceof\n// let\n// new\n// return\n// super\n// switch\n// this\n// throw\n// try\n// typeof\n// var\n// void\n// while\n// with\n// yield\n\n// // Ключевые слова, зарезервированные на будущее\n// // Следующие ключевые слова зарезервированы на будущее ECMAScript спецификацией. За ними сейчас не стоит никакой функциональности, но она может появиться в будущих версиях, поэтому эти ключевые слова не могут быть использованы, как идентификаторы. Эти ключевые слова не могут быть использованы даже в strict или non-strict режимах.\n\n// enum\n// await\n\n// // Следующие ключевые слова зарезервированы для кода, который выполняется в strict режиме:\n\n// implements\n// package\n// protected\n// static\n// interface\n// private\n// public\n\n// // Зарезервированные ключевые слова в более старых версиях\n// // Перечисленные ниже ключевые слова зарезервированы для старых версий ECMAScript спецификаций (ECMAScript от 1 по 3).\n\n// abstract\n// boolean\n// byte\n// char\n// double\n// final\n// float\n// goto\n// int\n// long\n// native\n// short\n// synchronized\n// transient\n// volatile\n\n// // К тому же, литералы null, true, и false зарезервированы в ECMAScript для их обычной функциональности.\n\n\n// // 2.4 Переменные\n// let admin, name;\n// name = 'Jhon';\n// admin = name;\n// alert(admin);\n\n// const BIRTHDAY = '18.04.1982';\n// const age = someCode(BIRTHDAY);\n\n// let name = \"Ilya\";\n// alert( `hello ${1}` );                  // hello 1\n// alert( `hello ${\"name\"}` );             // hello name\n// alert( `hello ${name}` );               // hello Ilya\n\n// let userName = prompt(\"Ввведите свое имя\", \"\");     //покажет введенный пользователем текст\n// alert(userName);\n\n// let userName = confirm(\"Ввведите свое имя\", \"\");    //приводит вопрос к true/false\n// alert(userName);\n\n\n// // 2.8 Операторы\n\n// let a = 1, b = 1;\n// let c = ++a;                            // префиксная форма инкремента\n// let d = b++;                            // постфиксная форма инкремента\n// console.log(a);                         // 2\n// console.log(b);                         // 2\n// console.log(c);                         // 2\n// console.log(d);                         // 1\n\n// // Результат присваивания\n// let a = 2;\n// let x = 1 + (a *= 2);\n// console.log(a);                            // 4\n// console.log(x);                            // 5\n\n// // Преобразование типов\n// console.log(\"\" + 1 + 0);                      // 10 - сшивание\n// console.log(\"\" - 1 + 0);                      // -1\n// console.log(true + false);                    // 1+0=1\n// console.log(6 / \"3\");                         // 6/3=2\n// console.log(\"2\" * \"3\");                       // 2*3=6\n// console.log(4 + 5 + \"px\");                    // (4+5)px=9px\n// console.log(\"$\" + 4 + 5);                     // $45 - сшивание\n// console.log(\"4\" - 2);                         // 4-2=2\n// console.log(\"4px\" - 2);                       // NaN\n// console.log(\"  -9  \" + 5);                    // \"-9-5 \" - сшивание\n// console.log(\"  -9  \" - 5);                    // -9-5=-14\n// console.log(null + 1);                        // 0+1=1\n// console.log(undefined + 1);                   // NaN+1=NaN\n// console.log(\" \\t \\n\" - 2);                    // 0-2=-2, пробельные символы, такие как \\t и \\n, по краям строки игнорируются при преобразовании в число\n\n\n// Исправьте сложение\n\n// let a = prompt(\"Первое число?\", 1);             // prompt вернет значение строкой\n// let b = prompt(\"Второе число?\", 2);\n// alert(a + b);                                   // 12\n\n// let a = +prompt(\"Первое число?\", 1);\n// let b = +prompt(\"Второе число?\", 2);\n// alert(a + b);                                   // 3\n\n// let a = prompt(\"Первое число?\", 1);\n// let b = prompt(\"Второе число?\", 2);\n// alert(+a + +b);                                 // 3\n\n\n// // 2.9 Операторы сравнения\n\n// console.log(5 > 4);                                 // true\n// console.log(\"ананас\" > \"яблоко\");                   // false: я>а\n// console.log(\"2\" > \"12\");                            // true: 2>1\n// console.log(undefined == null);                     // true: специальный случай. Значения null и undefined равны только друг другу при нестрогом сравнении.\n// console.log(undefined === null);                    // false: строгое сравнение разных типов\n// console.log(null == \"\\n0\\n\");                       // false: null равен только undefined\n// console.log(null === +\"\\n0\\n\");                     // false: строгое сравнение разных типов\n\n\n// // 2.10 Условное ветвление: if, '?'\n\n// // if (строка с нулём)\n\n// if (\"0\") {                                             // строка не пустая\n//     console.log('Привет');\n// };\n\n// // Название JavaScript\n\n// let value = prompt('Какое \"официальное\" название JavaScript?', '');\n// if (value == 'ECMAScript') {\n//     console.log('Верно!');\n// } else {\n//     console.log('Не знаете? ECMAScript!');\n// };\n\n// // Покажите знак числа\n\n// let number = prompt('Введите число', 0);\n// if (number > 0 ) {\n//     console.log(1);\n// } else if (number < 0) {\n//     console.log(-1);\n// } else {\n//     console.log(0);\n// };\n\n// // Перепишите 'if' в '?'\n\n// // let result;\n// // if (a + b < 4) {\n// //     result = 'Мало';\n// // } else {\n// //     result = 'Много';\n// // }\n// result = (a + b < 4) ? 'Мало' : 'Много';\n\n// // Перепишите 'if..else' в '?'\n\n// // let message;\n// // if (login == 'Сотрудник') {\n// //     message = 'Привет';\n// // } else if (login == 'Директор') {\n// //     message = 'Здравствуйте';\n// // } else if (login == '') {\n// //     message = 'Нет логина';\n// // } else {\n// //     message = '';\n// // }\n// let message = (login == 'Сотрудник') ? 'Привет' :\n//     (login == 'Директор') ? 'Здравствуйте' :\n//         (login == '') ? 'Нет логина' :\n//             '';\n\n\n// // 2.11 Логические операторы\n\n// // Что выведет alert (ИЛИ)?\n// console.log(null || 2 || undefined);                 // 2\n// console.log(alert(1) || 2 || alert(3));              // 1, 2\n\n// // Что выведет alert (И)?\n// console.log(1 && null && 2);                         // null\n// console.log(alert(1) && alert(2));                   // 1, underfined\n\n// // Что выведет этот код?\n// console.log(null || 2 && 3 || 4 );                      // 3. Приоритет оператора && выше, чем ||, поэтому он выполнится первым.\n\n// // Проверка значения из диапазона\n// let age = prompt('Введите число', '');\n// if (age => 14 && age <= 90) {\n//     console.log(age);\n// } else {\n//     console.log('ALERT');\n// };\n\n// // Проверка значения вне диапазона\n// let age = prompt('Введите число', '');\n// if (!(age => 14 && age <= 90)) {\n//     console.log(age);\n// } else {\n//     console.log('ALERT');\n// };\n\n// let age = prompt('Введите число', '');\n// if (age < 14 || age > 90) {\n//     console.log(age);\n// } else {\n//     console.log('ALERT');\n// };\n\n// // Вопрос об \"if\"\n// if (-1 || 0) console.log('first');                     // true\n// if (-1 && 0) console.log('second');                    // false\n// if (null || -1 && 1) console.log('third');             // true, null || 1\n\n// // Проверка логина\n// let userName = prompt('Кто там?', '');\n\n// if (userName === 'Админ') {\n//     let password = prompt('Пароль?', '');\n\n//     if (password === 'Я главный') {\n//         console.log('Здравствуйте!');\n//     } else if (pass === '' || pass === null) {\n//         console.log('Отменено');\n//     } else {\n//         console.log('Неверный пароль');\n//     };\n\n// } else if (userName === '' || userName === null) {\n//     console.log('Отменено');\n// } else {\n//     console.log(\"Я вас не знаю\");\n// }\n\n// // Проверка логина:\n\n// \"use strict\";\n\n// let getAnswerUserLogin = prompt(\"Введите логин\");\n// const login = String(\"ROOT\")\n// const password = String(\"ROOT\");\n\n// while (true) {\n\n// if ( getAnswerUserLogin == login ) {\n\n//     let getAnswerUserPassword = prompt(\"Введите пароль\");\n\n//     if ( getAnswerUserPassword == password ) {\n//         alert(\"Вы успешно вошли в аккаунт!\")\n//         break;\n//     }\n//     else if ( getAnswerUserPassword != password ) {\n//         alert(\"Пароль не подходит\");\n//     }\n//     else {\n//         alert(\"ERROR\");\n//         break;\n//     }\n// }\n\n// else if (getAnswerUserLogin != login) {\n//     alert(\"Нет такого аккаунта!\")\n//     getAnswerUserLogin = prompt(\"Введите логин\");\n// }\n\n// else if ( getAnswerUserLogin == false ) {\n//     alert(\"Вы вышли с формы авторизации\")\n//     break;\n// }\n\n//     else {\n//     alert(\"ERROR\")\n// }\n\n// }\n\n\n// // 2.13 Циклы while и for\n\n// // Последнее значение цикла\n// let i = 3;\n// while (i) {\n//     alert(i--);                       // 3,2,1\n// }\n\n// // Какие значения выведет цикл while?\n// // Префиксный вариант ++i:\n// let i = 0;\n// while (++i < 5) alert(i);                // 1,2,3,4 - увеличение->сравнение->alert\n// // Постфиксный вариант i++\n// let i = 0;\n// while (i++ < 5) alert( i );              // 1,2,3,4,5 - сравнение->увеличение->alert\n\n// // Какие значения выведет цикл for?\n// // Постфиксная форма:\n// for (let i = 0; i < 5; i++) alert( i );     // 0,1,2,3,4 - присваивание->сравнение->увеличение->alert\n// // Префиксная форма:\n// for (let i = 0; i < 5; ++i) alert( i );     // 0,1,2,3,4 - присваивание->сравнение->увеличение->alert\n\n// // Выведите чётные числа от 2 до 10\n// for (let i = 2; i < 10; i++) {\n//     if (i % 2 == 0) {\n//         console.log(i);\n//     }\n// }\n\n// // Замените for на while\n// for (let i = 0; i < 3; i++) {\n//     console.log( `number ${i}!` );          // 0,1,2\n// }\n// let i = 0;\n// while (i < 3) {\n//     console.log(`number ${i}!`);            // 0,1,2\n//     i++;\n// }\n\n// // Повторять цикл, пока ввод неверен\n// // 1 вариант\n// let num;\n// do {\n//     num = prompt(\"Введите число больше 100?\", 0);\n// } while(num <= 100 && num);\n// // 2 вариант\n// while (1) {\n//     let res = prompt('введите больше 100');\n//     if (res > 100 || res === null) break;\n// }\n\n// Вывести простые числа\n// for (let num = 0; num < 10; num++) {\n//     if ( num % num == 0 ) {\n//             console.log(num);                   // выведет все числа от 1 до 10\n//     }\n// }\n// let n = 10;\n// nextPrime:\n// for (let i = 2; i <= n; i++) {                  // Для всех i...\n//     for (let j = 2; j < i; j++) {               // проверить, делится ли число..\n//         if ( i % j == 0) continue nextPrime;    // не подходит, берём следующее\n//     }\n//     console.log(i);                             // 2,3,5,7\n// }\n\n\n// // 2.14 Конструкция \"switch\"\n\n// Напишите \"if\", аналогичный \"switch\"\n// switch (browser) {\n//     case 'Edge':\n//         alert( \"You've got the Edge!\" );\n//         break;\n\n//     case 'Chrome':\n//     case 'Firefox':\n//     case 'Safari':\n//     case 'Opera':\n//         alert( 'Okay we support these browsers too' );\n//         break;\n\n//     default:\n//         alert( 'We hope that this page looks ok!' );\n// }\n\n// let browser = prompt(\"Your brawser\", 0);\n// if (browser === 'Edge') {                                   // можно использовать нестрогое сравнение ==\n//     console.log(\"You've got the Edge!\");\n// } else if (browser === 'Chrome'\n//     || browser === 'Firefox'\n//     || browser === 'Safari'\n//     || browser === 'Opera') {\n//     console.log('Okay we support these browsers too');\n// } else if (browser ==='0') {                                // это условие добавлено от себя, т.к. при 0=true и сработает предыдущее условие\n//     console.log('We hope that this page looks ok!');\n// } else {\n//     console.log('We hope that this page looks ok!');\n// };\n\n// // Переписать условия \"if\" на \"switch\"\n// const number = +prompt('Введите число между 0 и 3', '');\n// if (number === 0) {\n//     alert('Вы ввели число 0');\n// }\n// if (number === 1) {\n//     alert('Вы ввели число 1');\n// }\n// if (number === 2 || number === 3) {\n//     alert('Вы ввели число 2, а может и 3');\n// }\n\n// const number = +prompt('Введите число между 0 и 3', '');\n// switch (number) {\n//     case 0:\n//         console.log('Вы ввели число 0');\n//         break;\n//     case 1:\n//         console.log('Вы ввели число 1');\n//         break;\n//     case 2:\n//     case 3:\n//         console.log('Вы ввели число 2, а может и 3');\n//         break;\n\n//     default:\n//         break;\n// }\n\n\n// // 2.15 Функции. Function Declaration\n\n// Обязателен ли \"else\"?\n// function checkAge(age) {\n//     if (age > 18) {\n//         return true;\n//     } else {\n//     // ...\n//         return confirm('Родители разрешили?');\n//   }\n// }\n// function checkAge(age) {\n//     if (age > 18) {\n//         return true;\n//     }\n//   // ...\n//         return confirm('Родители разрешили?');\n// }\n// Оба варианта функций работают одинаково, отличий нет.\n\n// Перепишите функцию, используя оператор '?' или '||'\n// function checkAge(age) {\n//     if (age > 18) {\n//         return true;\n//     } else {\n//         return confirm('Родители разрешили?');\n//     }\n// }\n\n// // 1 вариант\n// function checkAge(age) {\n//     return (age > 18) ?\n//     // true                             // заменено на вывод в консоль\n//     console.log(age) :\n//     confirm('Родители разрешили?')\n// }\n// checkAge(16)\n\n// // 2 вариант\n// function checkAge(age) {\n//     return (age > 18) || confirm('Родители разрешили?');\n// }\n// checkAge(16)\n\n// Функция min(a, b)\n\n// function min(a,b) {\n//     if (a < b) {\n//         console.log(a);\n//         return a;\n//     } else {\n//         console.log(b);\n//         return b;\n//     }\n// };\n// min(2, 5);\n// min(3, -1);\n// min(3, -1);\n\n// function min(a, b) {\n//     console.log(a < b ? a : b);\n//     return a < b ? a : b;\n// };\n// min(2, 5);\n// min(3, -1);\n// min(3, -1);\n\n// // Функция pow(x,n)\n\n// // нет проверки натуральности числа\n// function pow(x,n) {\n//     // let x = prompt('Введите x');\n//     // let n = prompt('Введите n');\n//     console.log(x **n);\n//     return x **n\n// };\n// pow(3, 2);\n// pow(3, 3);\n// pow(1, 100);\n\n// // вариант с полными проверками\n// function pow(x, n) {\n//     let result = x;\n\n//     for (let i = 1; i < n; i++) {\n//         result *= x;        \n//     }\n//     return result;\n// }\n\n// let x = prompt('Введите x', '');\n// let n = prompt('Введите n', '');\n\n// if (n<1) {\n//     console.log(`Степень ${n} не поддерживается, используйте натуральное число`);\n// } else {\n//     console.log( pow (x, n));\n// }\n\n\n// // 2.17 Стрелочные функции, основы\n\n// // Замените код Function Expression стрелочной функцией:\n\n// function ask(question, yes, no) {\n//     if (confirm(question)) yes()\n//     else no();\n//   };\n  \n//   ask(\n//     \"Вы согласны?\",\n//     () => alert(\"Вы согласились.\"),\n//     () => alert(\"Вы отменили выполнение.\") \n//   );\n\n//   console.log(ask());\n\n// // вариант решения\n//   let ask = (question, yes, no) => confirm(question) ? yes() : no();\n\n// let quastion = (\"Вы согласны?\") ?\n// () => alert(\"Вы согласились.\") :\n// () => alert(\"Вы отменили выполнение.\")\n\n// ask()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":[],"version":3,"file":"index.5015261c.js.map"}