{"mappings":"AAoFAA,MAAM,+CAAgD,CAClDC,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CACjBC,OAAQ,WAGfC,MAAKC,GAAQA,EAAKC,SAClBF,MAAKG,GAAQC,QAAQC,IAAIF,KAK1BT,MAAM,+CAAgD,CAClDC,OAAQ,WAEXK,MAAKC,GAAQA,EAAKC,SAClBF,MAAKG,GAAQC,QAAQC,IAAIF","sources":["src/js/goit-test-11-021.js"],"sourcesContent":["\"use strict\";\n\n// <!-- Лекция 25.11.2022 -->\n\n\n// тестовый публичный сервис\n// https://jsonplaceholder.typicode.com/posts\n// SOAP API\n// https://habr.com/ru/post/483204/\n// https://firebase.google.com/\n\n// // пример запроса\n// const obj = {\n//     name: 'User',\n//     email: 'test@gmail.com',\n//     age: 22,\n// }\n\n// fetch('https://mysite/', {\n//     method: 'PATCH',\n//     body: JSON.stringify({\n//         email: 'test2@gmail.com'\n//     })\n// })\n\n\n// // Create = POST\n\n// const options = {\n//     method: 'POST',\n//     body: JSON.stringify({\n//         author: \"Mango\",\n//         body: \"CRUD is awesome\",\n//     }),\n//     headers: {\n//         \"Content-Type\": \"application/json; charset=UTF-8\",\n//     },\n// };\n\n// fetch('https://jsonplaceholder.typicode.com/posts', options)\n// .then(resp => resp.json())\n// .then(data => console.log(data));\n\n\n// // Read = GET\n\n// const options = {\n//     method: 'GET',\n//     headers: {\n//         \"Content-Type\": \"application/json; charset=UTF-8\",\n//     },\n// };\n\n// fetch('https://jsonplaceholder.typicode.com/posts', options)\n// .then(resp => resp.json())\n// .then(data => console.log(data));   // 100 обьктов в массиве\n\n\n// // Update = PATCH\n\n// const obj = {\n//     name: 'Mango',\n//     age: 22,\n//     id: 1\n// }\n\n// fetch(`https://jsonplaceholder.typicode.com/posts/1`, {\n//     method: 'PATCH',\n//     body: JSON.stringify({\n//         name: 'Poly'\n//     })\n// })\n// .then(resp => resp.json())\n// .then(data => console.log(data));\n\n\n// // Update = PATCH\n\nconst obj = {\n    name: 'Mango',\n    age: 22,\n    id: 1\n}\n\nfetch(`https://jsonplaceholder.typicode.com/posts/1`, {\n    method: 'PUT',\n    body: JSON.stringify({\n        author: 'Poly'\n    })\n})\n.then(resp => resp.json())\n.then(data => console.log(data));\n\n\n// // Delete = DELETE\n\nfetch(`https://jsonplaceholder.typicode.com/posts/1`, {\n    method: 'DELETE',\n})\n.then(resp => resp.json())\n.then(data => console.log(data));       // пустой объект\n\n\n\n\n\n"],"names":["fetch","method","body","JSON","stringify","author","then","resp","json","data","console","log"],"version":3,"file":"goit-test-11-021.e7ace5ca.js.map"}