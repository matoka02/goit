{"mappings":"AAAA","sources":["src/js/goit-test-05-010.js"],"sourcesContent":["\"use strict\";\n\n// <!-- Лекция 07.10.2022 -->\n\n\n// // 1. Блогер\n\n// class Blogger {\n//     constructor({ name, age, numberOfPosts, topics }) {\n//         this.name = name;\n//         this.age = age;\n//         this.numberOfPosts = numberOfPosts;\n//         this.topics = topics;\n//     }\n//     getInfo() {\n//         return `User ${this.name} is ${this.age} years old and ${this.numberOfPosts} posts`;\n//     }\n//     updatePostCount(value) {\n//         this.numberOfPosts += value\n//     }\n// }\n// const mango = new Blogger({\n//     name: 'mango@mail.com',\n//     age: 24,\n//     numberOfPosts: 20,\n//     topics: ['tech', 'cooking'],\n// })\n\n// console.log(mango);\n// console.log(mango.getInfo());\n// mango.updatePostCount(5);\n// console.log(mango.getInfo());\n\n\n// // 2. Склад\n\n// class Storage{\n\n//     constructor(arr) {\n//         this.items = arr\n//     }\n\n//     getItems() {\n//         return this.items\n//     }\n\n//     addItem(item) {\n//         this.items.push(item)\n//     }\n\n//     // removeItem(item) {\n//     //     if (this.items.includes(item)) {\n//     //         const idx = this.items.indexOf(item);\n//     //         this.items.splice(idx,1)\n//     //     }\n//     // }\n\n//     removeItem(item) {\n//         const idx = this.items.indexOf(item);\n//         if (!!~idx) {\n//             this.items.splice(idx, 1)\n//         } else {\n//             console.log('Not found');\n//         }\n//     }\n// }\n\n// const storage = new Storage(['strawberry', 'lemon', 'grape', 'peach']);\n// console.log(storage);\n// storage.addItem('banana');\n// console.table(storage.items);\n// storage.removeItem('strawberry');\n// console.table(storage.items);\n\n\n// // 3. Пользователь\n\n// class User {\n//     #login;\n//     #email;\n//     constructor({ login, email }) {\n//         this.#login = login;\n//         this.#email = email;\n//     }\n\n//     get login() {\n//         return this.#login\n//     }\n//     set login(newLogin) {\n//         if (this.#login !== newLogin) {\n//             this.#login = newLogin        \n//         }\n//     }\n\n//     get email() {\n//         return this.#email\n//     }\n//     set email(newEmail) {\n//         if (this.#email !== newEmail) {\n//             this.#email = newEmail\n//         }\n//     }    \n// }\n\n// const mango = new User({\n//     login: 'Mango',\n//     email: 'mango@dog.woof',\n// })\n// mango.login = 'asvasdadasd';\n// console.log(mango);\n// mango.login;\n// mango.login = 'mangodoge';\n// console.log(mango);\n\n\n// // 4. Заметки\n\n// class Notes{\n\n//     static Priority = {\n//         LOW: 'low',\n//         NORMAL: 'normal',\n//         HIGHT: 'hight',\n//     };\n\n//     constructor(arr) {\n//         this.items = arr;\n//     }\n\n//     addNote(note) {\n//         this.items.push(note);\n//     }\n\n//     // removeNote(text) {\n//     //     const idx = this.items.findIndex(({ text: itemText }) => text === itemText);\n//     //     console.log(idx);\n//     //     if (!!~idx) {\n//     //         this.items.splice(idx, 1)\n//     //     } else {\n//     //         console.log('Not found');\n//     //     }\n//     // }\n\n//     removeNote(text) {\n//         const inArr = this.items.some(item => item.text === text);\n//         if (inArr) {\n//             const idx = this.items.findIndex(({ text: itemText }) => text === itemText)\n//             this.items.splice(idx, 1)\n//         } else {\n//             console.log('Not found');\n//         }\n//     }\n\n//     updatePriority(text, newPriority) {\n//         const inArr = this.items.some(item => item.text === text);\n//         if (inArr) {\n//             inArr.priority = newPriority\n//         } else {\n//             console.log('Not found');\n//         }\n//     }\n// }\n\n// const myNotes = new Notes([]);\n\n// myNotes.addNote({ text: 'Моя первая запись', priority: Notes.Priority.LOW });\n// myNotes.addNote({ text: 'Моя вторая запись', priority: Notes.Priority.HIGHT });\n// console.log(myNotes.items);\n// // myNotes.removeNote('Моя вторая запись');\n// myNotes.removeNote('Моя восьмая запись');\n// myNotes.updatePriority('Моя вторая запись', Notes.Priority.NORMAL);\n\n\n// // 5. Переключатель\n// // Напишите класс Toggle, который принимает объект настройки {isOpen: boolean} и объявляет одно свойство on - состояние вкл/выкл(true/false). По умолчанию значения свойства on должно быть false.\n\n// class Toggle{\n//     constructor(on) {\n//         this.isOpen = on\n//     }\n// }\n\n\n// const firstToggle = new Toggle({ isOpen: true });\n// console.group('firstToggle');\n// console.log(firstToggle.on);\n// firstToggle.toggle();\n// console.log(firstToggle.on);\n// console.groupEnd('firstToggle');\n\n// const secondToggle = new Toggle();\n// console.group('secondToggle');\n// console.log(secondToggle.on);\n// secondToggle.toggle();\n// console.log(secondToggle.on);\n// console.groupEnd('secondToggle');\n"],"names":[],"version":3,"file":"index.8fd79e7b.js.map"}